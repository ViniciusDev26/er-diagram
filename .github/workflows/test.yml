name: Test Action

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: postgres_pass
          POSTGRES_DB: postgres_db
        options: >-
          --health-cmd="pg_isready -U postgres_user -d postgres_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres_user; do
            echo "⏳ Waiting for database..."
            sleep 2
          done

      - name: Create example schema
        env:
          PGPASSWORD: postgres_pass
        run: |
          psql -h localhost -U postgres_user -d postgres_db << 'EOF'
          -- Create ENUM type
          CREATE TYPE status_enum AS ENUM ('active', 'inactive', 'pending');

          -- Create users table
          CREATE TABLE users (
            id SERIAL PRIMARY KEY,
            email VARCHAR(255) UNIQUE NOT NULL,
            status status_enum DEFAULT 'pending'
          );

          -- Create posts table with foreign key
          CREATE TABLE posts (
            id SERIAL PRIMARY KEY,
            user_id INTEGER NOT NULL,
            title VARCHAR(255) NOT NULL,
            content TEXT,
            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
          );
          EOF

      - name: Test Action (Basic - .mmd only)
        uses: ./
        with:
          pg-host: localhost
          pg-user: postgres_user
          pg-password: postgres_pass
          pg-database: postgres_db
          output-dir: ./docs

      - name: Verify .mmd file was created
        run: |
          if [ ! -f "./docs/database-er-diagram.mmd" ]; then
            echo "❌ Error: .mmd file not found!"
            exit 1
          fi
          echo "✅ .mmd file created successfully"
          cat ./docs/database-er-diagram.mmd

      - name: Test Action (With README integration)
        uses: ./
        with:
          pg-host: localhost
          pg-user: postgres_user
          pg-password: postgres_pass
          pg-database: postgres_db
          output-dir: ./docs
          write-to-readme: true
          readme-path: ./docs/README.md
          excluded-tables: flyway_schema_history

      - name: Verify README was updated
        run: |
          if [ ! -f "./docs/README.md" ]; then
            echo "❌ Error: README not found!"
            exit 1
          fi
          if ! grep -q "<!-- ER_DIAGRAM_START -->" "./docs/README.md"; then
            echo "❌ Error: README missing diagram markers!"
            exit 1
          fi
          echo "✅ README updated successfully"
          cat ./docs/README.md

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: generated-diagrams
          path: |
            docs/database-er-diagram.mmd
            docs/README.md
